[{"/home/wilder/Modèles/personal/notes-board/src/App.js":"1"},{"size":1134,"mtime":1606607843479,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":1,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"6"},"140noy9","/home/wilder/Modèles/personal/notes-board/src/App.js",["7","8","9","10"],"import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Draggable from \"react-draggable\";\nimport { v4 as uuidv4 } from \"uuid\";\nlet randomColor = require(\"randomcolor\");\n\nfunction App() {\n  const [item, setItem] = useState(\"\");\n  const [items, setItems] = useState([]);\n\n  JSON.parse(localStorage.getItem(\"items\")) || [];\n\n  const keyPress = (event) => {\n    let code = event.keyCode || event.which;\n    if (code === 1) {\n      newItem();\n    }\n  };\n\n  const newItem = () => {\n    if (item.trim() !== \"\") {\n      const newItem = {\n        id: uuidv4(),\n        item: item,\n        color: randomColor({ luminosity: \"light\" }),\n        defaultPos: { x: 100, y: 0 },\n      };\n      setItems((items) => [...items, newItem]);\n      setItem(\"\");\n    } else {\n      alert(\"Enter an item\");\n      setItem(\"\");\n    }\n  };\n  return (\n    <div className=\"App\">\n      <input\n        value={item}\n        onChange={(e) => setItem(e.target.value)}\n        placeholder=\"Enter your note here\"\n        onKeyPress={(e) => keyPress(e)}\n      />\n      <button onClick={newItem}>ENTER</button>\n    </div>\n  );\n}\n\nexport default App;\n",{"ruleId":"11","severity":1,"message":"12","line":1,"column":27,"nodeType":"13","messageId":"14","endLine":1,"endColumn":36},{"ruleId":"11","severity":1,"message":"15","line":3,"column":8,"nodeType":"13","messageId":"14","endLine":3,"endColumn":17},{"ruleId":"11","severity":1,"message":"16","line":9,"column":10,"nodeType":"13","messageId":"14","endLine":9,"endColumn":15},{"ruleId":"17","severity":2,"message":"18","line":11,"column":3,"nodeType":"19","messageId":"20","endLine":11,"endColumn":51},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Draggable' is defined but never used.","'items' is assigned a value but never used.","no-unused-expressions","Expected an assignment or function call and instead saw an expression.","ExpressionStatement","unusedExpression"]